@article{metagol,
    title={Learning higher-order logic programs},
    author={Andrew Cropper and Rolf Morel and Stephen H. Muggleton},
    year={2019},
    eprint={1907.10953},
    archivePrefix={arXiv},
    primaryClass={cs.LG}
}

@article{schmidetalworkshop,
  author =	{Ute Schmid and Stephen H. Muggleton and Rishabh Singh},
  title =	{Approaches and Applications of Inductive Programming (Dagstuhl Seminar 17382)},
  pages =	{86--108},
  journal =	{Dagstuhl Reports},
  ISSN =	{2192-5283},
  year =	{2018},
  volume =	{7},
  number =	{9},
  editor =	{Ute Schmid and Stephen H. Muggleton and Rishabh Singh},
  publisher =	{Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{http://drops.dagstuhl.de/opus/volltexte/2018/8590},
  URN =		{urn:nbn:de:0030-drops-85909},
  doi =		{10.4230/DagRep.7.9.86},
  annote =	{Keywords: inductive program synthesis, inductive logic programming, probabilistic programming, end-user programming, human-like computing}
}

@article{gulwanietal,
author = {Gulwani, Sumit and Hern\'{a}ndez-Orallo, Jos\'{e} and Kitzelmann, Emanuel and Muggleton, Stephen H. and Schmid, Ute and Zorn, Benjamin},
title = {Inductive Programming Meets the Real World},
year = {2015},
issue_date = {October 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {58},
number = {11},
issn = {0001-0782},
url = {https://doi.org/10.1145/2736282},
doi = {10.1145/2736282},
journal = {Commun. ACM},
month = oct,
pages = {90–99},
numpages = {10}
}

@Article{Flener2008,
author="Flener, Pierre
and Schmid, Ute",
title="An introduction to inductive programming",
journal="Artificial Intelligence Review",
year="2008",
month="Mar",
day="01",
volume="29",
number="1",
pages="45--62",
abstract="The research field of inductive programming is concerned with the design of algorithms for learning computer programs with complex flow of control (typically recursive calls) from incomplete specifications such as examples. We introduce a basic algorithmic approach for inductive programming and illustrate it with three systems: dialogs learns logic programs by combining inductive and abductive reasoning; the classical thesys system and its extension igor1 learn functional programs based on a recurrence detection mechanism in traces; igor2 learns functional programs over algebraic data-types making use of constructor-term rewriting systems. Furthermore, we give a short history of inductive programming, discuss related approaches, and give hints about current applications and possible future directions of research.",
issn="1573-7462",
doi="10.1007/s10462-009-9108-7",
url="https://doi.org/10.1007/s10462-009-9108-7"
}

@Article{gulwanistem,
author = {Gulwani, Sumit},
title = {Example-Based Learning in Computer-Aided STEM Education},
year = {2014},
month = {August},
pages = {70-80},
journal = {Communications of the ACM},
volume = {57},
edition = {Communications of the ACM},
number = {8},
}

@article{lambdasq,
author = {Feser, John and Chaudhuri, Swarat and Dillig, Isil},
year = {2015},
month = {06},
pages = {229-239},
title = {Synthesizing Data Structure Transformations from Input-Output Examples},
volume = {50},
journal = {ACM SIGPLAN Notices},
doi = {10.1145/2813885.2737977}
}

@misc{mhask,
author = {Susumu  Katayama},
year = {2005},
website = {http://nautilus.cs.miyazaki-u.ac.jp/~skata/MagicHaskeller.html}
}

@InProceedings{gulwani2012spreadsheet,
author = {Gulwani, Sumit and Harris, William R. and Singh, Rishabh},
title = {Spreadsheet Data Manipulation using Examples},
year = {2012},
month = {January},
url = {https://www.microsoft.com/en-us/research/publication/spreadsheet-data-manipulation-using-examples/},
pages = {97-105},
journal = {Communications of the ACM},
volume = {55},
note = {Invited to CACM Research Highlights},
}

@article{thesis,
author = {Summers, Phillip D.},
title = {A Methodology for LISP Program Construction from Examples},
year = {1977},
issue_date = {January 1977},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {24},
number = {1},
issn = {0004-5411},
url = {https://doi.org/10.1145/321992.322002},
doi = {10.1145/321992.322002},
journal = {J. ACM},
month = jan,
pages = {161–175},
numpages = {15}
}

@article{kitzelmannsurvey,
  title={Inductive Programming: A Survey of Program Synthesis Techniques},
  author={Emanuel Kitzelmann},
  booktitle={AAIP},
  year={2009}
}

@article{igor2,
author = {Kato, Martin and Kitzelmann, Emanuel and Schmid, Ute},
year = {2009},
month = {06},
pages = {},
title = {A Unifying Framework for Analysis and Evaluation of Inductive Programming Systems},
journal = {Proceedings of the 2nd Conference on Artificial General Intelligence, AGI 2009},
doi = {10.2991/agi.2009.16}
}

@Article{progol,
author="Muggleton, Stephen",
title="Inverse entailment and progol",
journal="New Generation Computing",
year="1995",
month="Dec",
day="01",
volume="13",
number="3",
issn="1882-7055",
doi="10.1007/BF03037227",
url="https://doi.org/10.1007/BF03037227"
}

@phdthesis{cropperth,
  title={Efficiently learning efficient programs},
  school={Imperial College London},
  author={Cropper, Andrew},
  year={2017}
}

@inproceedings{SchmidInductivePA,
  title={Inductive Programming as Approach to Comprehensible Machine Learning},
  author={Ute Schmid},
  booktitle={DKB/KIK@KI},
  year={2018}
}

@article{deductive,
author = {Manna, Zohar and Waldinger, Richard},
year = {1980},
month = {01},
pages = {90-121},
title = {A Deductive Approach to Program Synthesis},
volume = {2},
journal = {ACM Trans. Program. Lang. Syst.},
doi = {10.1145/357084.357090}
}

@article{MUGGLETON1999283,
title = "Inductive Logic Programming: Issues, results and the challenge of Learning Language in Logic",
journal = "Artificial Intelligence",
volume = "114",
number = "1",
pages = "283 - 296",
year = "1999",
issn = "0004-3702",
doi = "https://doi.org/10.1016/S0004-3702(99)00067-3",
url = "http://www.sciencedirect.com/science/article/pii/S0004370299000673",
author = "Stephen Muggleton",
keywords = "Inductive Logic Programming, Machine Learning, Scientific discovery, Protein prediction, Learning of , Natural language"
}